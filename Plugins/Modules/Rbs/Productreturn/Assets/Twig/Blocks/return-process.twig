{% set lineFormName = 'lineForm_' ~ blockId %}
{% set commonFormName = 'commonForm_' ~ blockId %}
{% set showPrices = parameters.displayPricesWithoutTax or parameters.displayPricesWithTax %}
{% set columnCount = showPrices ? 5 : 3 %}
{% set lineTrNgClass = "{
	'active': isEditing(shipmentIndex, lineIndex),
	'success': hasReturnLine(shipmentIndex, lineIndex) && !isEditing(shipmentIndex, lineIndex)
}"%}

{% block productDirectives %}
	{% include 'Rbs_Catalog/product-directives.twig' %}
{% endblock productDirectives %}

{% block returnProcessDirectives %}
	{% include 'Rbs_Productreturn/return-process-directives.twig' %}
{% endblock returnProcessDirectives %}

{% set cacheKey = blockId %}
<script type="text/javascript">
	window.__change['{{ cacheKey }}'] = {
		'orderData': {{ orderData | json_encode | raw}},
		'processData': {{ processData | json_encode | raw}}
	};
</script>

<h1>
	<span class="pull-right">{{ orderData.common.statusInfos.title }}</span>
	{{ i18n('m.rbs.order.front.order_title', ['ucf'], {'code': orderData.common.code, 'date': orderData.common.date|transDateTime}) }}
</h1>

<ul class="pull-right text-right list-unstyled">
	<li>
		<a href="{{ functionURL('Rbs_Order_OrderDetail', {'orderId': orderData.common.id}) }}" class="btn btn-default">
			{{ i18n('m.rbs.productreturn.front.cancel_request', ['ucf']) }}
		</a>
	</li>
</ul>

<h2>{{ i18n('m.rbs.productreturn.front.return_request', ['ucf']) }}</h2>

<div data-ng-controller="RbsProductreturnReturnProcessController" data-cache-key="{{ cacheKey }}">
	<div data-ng-repeat="(shipmentIndex, shipment) in returnData.shipments">
		<h3>
			{{ i18n('m.rbs.productreturn.front.expedition_of', ['ucf']) }} (= shipment.shipmentData.common.shippingDate | rbsDate =)
		</h3>
		<div class="table-responsive return-process">
			<table class="table table-striped table-vertical-middle">
				{% block shipmentLinesHead %}
					<thead>
						<tr>
							<th>{{ i18n('m.rbs.commerce.front.line_product', ['ucf']) }}</th>
							<th>{{ i18n('m.rbs.commerce.front.line_detail', ['ucf']) }}</th>
							<th>{{ i18n('m.rbs.commerce.front.quantity', ['ucf']) }}</th>
							{% if showPrices %}
								<th class="text-right" colspan="2">{{ i18n('m.rbs.commerce.front.price', ['ucf']) }}</th>
							{% endif %}
						</tr>
					</thead>
				{% endblock shipmentLinesHead %}
				{% block shipmentLines %}
					<tbody data-rbs-productreturn-shipment-lines=""></tbody>
				{% endblock shipmentLines %}
			</table>
		</div>
	</div>

	<div data-ng-show="hasReturnLine()">
		<form name="{{ commonFormName }}">
			<div class="form-group">
				<h3>{{ i18n('m.rbs.productreturn.front.you_want', ['ucf']) }}</h3>
				<div class="radio" data-ng-repeat="mode in processData.returnModes">
					<label>
						<input type="radio" name="returnMode" data-ng-model="returnData.returnMode" value="(= mode.id =)" />
						(= mode.title =)
					</label>
				</div>
			</div>

			<div class="form-group" data-ng-show="needsReshipment()">
				<h3>{{ i18n('m.rbs.productreturn.front.reshipment', ['ucf']) }}</h3>
				TODO grouper les types de modes ?
				<div class="radio" data-ng-repeat="mode in processData.reshippingModes">
					<label>
						<input type="radio" name="reshippingMode" data-ng-model="returnData.reshippingMode"
							value="(= mode.id =)" />
						(= mode.title =)
					</label>
				</div>
			</div>

			<button type="button" class="btn btn-primary"
				data-ng-disabled="{{ commonFormName }}.$invalid || isEditing()"
				data-ng-click="sendReturnRequest()">
				<span class="glyphicon glyphicon-ok"></span>
				{{ i18n('m.rbs.productreturn.front.send_return_request', ['ucf']) }}
			</button>
		</form>
	</div>
</div>