<?php
namespace Compilation\Change\Documents;
abstract class AbstractDocumentServices extends \Zend\Di\Di
{

	/**
	 * @param \Zend\Di\DefinitionList $dl
	 * @param \Change\Application\ApplicationServices $application
	 */
	public function __construct(\Zend\Di\DefinitionList $dl, \Change\Application\ApplicationServices $applicationServices)
	{

		$cl = new \Zend\Di\Definition\ClassDefinition('Change\\Testing\\Documents\\Inject1Service');
			$cl->setInstantiator('__construct')->addMethod('__construct', true)
				->addMethodParameter('__construct', 'applicationServices', array('type' => 'Change\Application\ApplicationServices', 'required' => true))
				->addMethodParameter('__construct', 'documentServices', array('type' => 'Change\Documents\DocumentServices', 'required' => true));
		$dl->addDefinition($cl);
		$cl = new \Zend\Di\Definition\ClassDefinition('Change\\Testing\\Documents\\Inject2Service');
			$cl->setInstantiator('__construct')->addMethod('__construct', true)
				->addMethodParameter('__construct', 'applicationServices', array('type' => 'Change\Application\ApplicationServices', 'required' => true))
				->addMethodParameter('__construct', 'documentServices', array('type' => 'Change\Documents\DocumentServices', 'required' => true));
		$dl->addDefinition($cl);
		
		parent::__construct($dl);
		$params = array('applicationServices' => $applicationServices, 'documentServices' => $this);

		$im = $this->instanceManager();
		$im->addAlias('change_testing_inject1', 'Change\\Testing\\Documents\\Inject1Service', $params);
		$im->addAlias('change_testing_inject2', 'Change\\Testing\\Documents\\Inject2Service', $params);

	}

	/**
	 * @return \Change\Testing\Documents\Inject1Service
	 */
	public function getChangeTestingInject1()
	{
		return $this->get('change_testing_inject1');
	}

	/**
	 * @return \Change\Testing\Documents\Inject2Service
	 */
	public function getChangeTestingInject2()
	{
		return $this->get('change_testing_inject2');
	}
}
